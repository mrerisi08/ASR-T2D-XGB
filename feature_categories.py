import pandas as pd
import json
from load_data import load_dataframe, DATA_LEAKS


def df_from_categories(cats: list, lgbm: bool = False) -> pd.DataFrame:
    """
    Loads the data from the JSON generated by 7_load_categories.py.
    Creates a list with all the categories' respective features.
    Indexes the dataframe using all the features and returns the dataframe.
    If necessary, can be used to fix LightGBM encoding error.
    """
    fp = open("../7_process_data_for_feature_subsets/feature_categories.json", 'r')
    feat_cats = json.load(fp)
    fp.close()

    for cat in cats:
        if cat not in feat_cats:
            raise ValueError("invalid item in list.")

    df = load_dataframe(for_lgbm=lgbm)
    lbl = df["LABEL"]
    allowed_features = []
    for cat in cats:
        allowed_features += feat_cats[cat]
    allowed_features = list(set(allowed_features))
    cols = list(df.columns)
    for col in allowed_features:
        try:
            cols.remove(col)
        except:
            pass

    for col in cols:
        if col in DATA_LEAKS:
            continue
        else:
            df = df.drop(col, axis=1)

    for leak in DATA_LEAKS:
        try:
            df = df.drop(leak, axis=1)
        except KeyError:
            pass

    df["LABEL"] = lbl
    return df
